//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations.Schema;    
using System.Data.Entity.ModelConfiguration;
using TuevSued.V1.IT.CoreBase.Entities.MasterDataModule.Common;
namespace TuevSued.V1.IT.FE.DataAccess.Entities
{
        /// <summary>
        /// Database mapping for <see cref="OrgOrganizationalUnit"/> to table ORG_ORGANIZATIONAL_UNIT
        /// </summary>
        internal sealed class OrgOrganizationalUnitMapping : EntityTypeConfiguration<OrgOrganizationalUnit>
        {
    	    public static readonly OrgOrganizationalUnitMapping Instance = new OrgOrganizationalUnitMapping();
    	    /// <summary>
            /// Instance constructor
            /// </summary>
            private OrgOrganizationalUnitMapping()
            {
                // Primary Key
                this.HasKey(t => t.Id);
    
                // Properties
                this.Property(t => t.Id)
                    .HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
    
                this.Property(t => t.Name)
                    .HasMaxLength(50);
    
                this.Property(t => t.Abbr)
                    .HasMaxLength(50);
    
                this.Property(t => t.AccountingArea)
                    .IsFixedLength()
                    .HasMaxLength(4);
    
                this.Property(t => t.LocationAbbr)
                    .HasMaxLength(50);
    
                this.Property(t => t.EmailFrom)
                    .HasMaxLength(100);
    
                this.Property(t => t.EmailTo)
                    .HasMaxLength(512);
    
                this.Property(t => t.CreateDate)
                    .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
    
                this.Property(t => t.Source)
                    .HasMaxLength(4);
    
                // Table & Column Mappings
                this.ToTable("ORG_ORGANIZATIONAL_UNIT", "ASPRO");
                this.Property(t => t.Id).HasColumnName(OrgOrganizationalUnit.Fields.Id);
                this.Property(t => t.OrgNumber).HasColumnName(OrgOrganizationalUnit.Fields.OrgNumber);
                this.Property(t => t.Name).HasColumnName(OrgOrganizationalUnit.Fields.Name);
                this.Property(t => t.Abbr).HasColumnName(OrgOrganizationalUnit.Fields.Abbr);
                this.Property(t => t.AccountingArea).HasColumnName(OrgOrganizationalUnit.Fields.AccountingArea);
                this.Property(t => t.LandTag).HasColumnName(OrgOrganizationalUnit.Fields.LandTag);
                this.Property(t => t.OrgTopId).HasColumnName(OrgOrganizationalUnit.Fields.OrgTopId);
                this.Property(t => t.LocationAbbr).HasColumnName(OrgOrganizationalUnit.Fields.LocationAbbr);
                this.Property(t => t.SysLocationId).HasColumnName(OrgOrganizationalUnit.Fields.SysLocationId);
                this.Property(t => t.OrgAccountTypeId).HasColumnName(OrgOrganizationalUnit.Fields.OrgAccountTypeId);
                this.Property(t => t.OrgTypeId).HasColumnName(OrgOrganizationalUnit.Fields.OrgTypeId);
                this.Property(t => t.OrdInspectionLocationId).HasColumnName(OrgOrganizationalUnit.Fields.OrdInspectionLocationId);
                this.Property(t => t.EmailFrom).HasColumnName(OrgOrganizationalUnit.Fields.EmailFrom);
                this.Property(t => t.EmailTo).HasColumnName(OrgOrganizationalUnit.Fields.EmailTo);
                this.Property(t => t.IsEgdokPrintAlways).HasColumnName(OrgOrganizationalUnit.Fields.IsEgdokPrintAlways);
                this.Property(t => t.CreateDate).HasColumnName(OrgOrganizationalUnit.Fields.CreateDate);
                this.Property(t => t.ChangeDate).HasColumnName(OrgOrganizationalUnit.Fields.ChangeDate);
                this.Property(t => t.DeleteDate).HasColumnName(OrgOrganizationalUnit.Fields.DeleteDate);
                this.Property(t => t.OwnerOrgId).HasColumnName(OrgOrganizationalUnit.Fields.OwnerOrgId);
                this.Property(t => t.VisibilityOrgId).HasColumnName(OrgOrganizationalUnit.Fields.VisibilityOrgId);
                this.Property(t => t.CreateEmployeeId).HasColumnName(OrgOrganizationalUnit.Fields.CreateEmployeeId);
                this.Property(t => t.ChangeEmployeeId).HasColumnName(OrgOrganizationalUnit.Fields.ChangeEmployeeId);
                this.Property(t => t.Source).HasColumnName(OrgOrganizationalUnit.Fields.Source);
                this.Property(t => t.FromDate).HasColumnName(OrgOrganizationalUnit.Fields.FromDate);
                this.Property(t => t.ToDate).HasColumnName(OrgOrganizationalUnit.Fields.ToDate);
                this.Property(t => t.OrgAccountingAreaId).HasColumnName(OrgOrganizationalUnit.Fields.OrgAccountingAreaId);
    
    
            }
        }
}
