//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
using TuevSued.V1.IT.CoreBase.Entities.MasterDataModule.DriverLicenceMasterData;

namespace TuevSued.V1.IT.FE.MasterDataModule.Lib.Data
{
        /// <summary>
        /// Database mapping for <see cref="LegalBasis"/> to table DRL_LEGAL_BASIS
        /// </summary>
        internal sealed class LegalBasisMapping : EntityTypeConfiguration<LegalBasis>
        {
    	    public static readonly LegalBasisMapping Instance = new LegalBasisMapping();
    	    /// <summary>
            /// Instance constructor
            /// </summary>
            private LegalBasisMapping()
            {
                // Primary Key
                this.HasKey(t => t.Id);
    
                // Properties
                this.Property(t => t.Id)
                    .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
    
                this.Property(t => t.Name)
                    .IsRequired()
                    .IsUnicode()
                    .HasMaxLength(50);
    
                this.Property(t => t.Description)
                    .IsRequired()
                    .IsUnicode()
                    .HasMaxLength(250);
    
                this.Property(t => t.MessageReason)
                    .IsRequired()
                    .IsUnicode()
                    .HasMaxLength(50);
    
                this.Property(t => t.MessageReasonStyle)
                    .IsRequired()
                    .IsUnicode()
                    .HasMaxLength(50);
    
                this.Property(t => t.CreateDate)
                    .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
    
                this.Property(t => t.PrintName)
                    .IsRequired()
                    .IsUnicode()
                    .HasMaxLength(50);
    
                // Table & Column Mappings
                this.ToTable("DRL_LEGAL_BASIS", "DATA");
                this.Property(t => t.Id).HasColumnName(LegalBasis.Fields.Id);
                this.Property(t => t.Name).HasColumnName(LegalBasis.Fields.Name);
                this.Property(t => t.Description).HasColumnName(LegalBasis.Fields.Description);
                this.Property(t => t.EducationCertificateRequired).HasColumnName(LegalBasis.Fields.EducationCertificateRequired);
                this.Property(t => t.FirstAssignation).HasColumnName(LegalBasis.Fields.FirstAssignation);
                this.Property(t => t.MessageReason).HasColumnName(LegalBasis.Fields.MessageReason);
                this.Property(t => t.MessageReasonStyle).HasColumnName(LegalBasis.Fields.MessageReasonStyle);
                this.Property(t => t.CreateDate).HasColumnName(LegalBasis.Fields.CreateDate);
                this.Property(t => t.ChangeDate).HasColumnName(LegalBasis.Fields.ChangeDate);
                this.Property(t => t.OwnerOrgId).HasColumnName(LegalBasis.Fields.OwnerOrgId);
                this.Property(t => t.VisibilityOrgId).HasColumnName(LegalBasis.Fields.VisibilityOrgId);
                this.Property(t => t.CreateEmployeeId).HasColumnName(LegalBasis.Fields.CreateEmployeeId);
                this.Property(t => t.ChangeEmployeeId).HasColumnName(LegalBasis.Fields.ChangeEmployeeId);
                this.Property(t => t.FromDate).HasColumnName(LegalBasis.Fields.FromDate);
                this.Property(t => t.ToDate).HasColumnName(LegalBasis.Fields.ToDate);
                this.Property(t => t.ReplacementId).HasColumnName(LegalBasis.Fields.ReplacementId);
                this.Property(t => t.PrintName).HasColumnName(LegalBasis.Fields.PrintName);
                this.Property(t => t.DeleteDate).HasColumnName(LegalBasis.Fields.DeleteDate);
            }
        }
}
