//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
using TuevSued.V1.IT.CoreBase.Entities.MasterDataModule.DriverLicenceMasterData;
namespace TuevSued.V1.IT.FE.MasterDataModule.Lib.Data
{
        /// <summary>
        /// Database mapping for <see cref="CoreDataProductLocalization"/> to table DRL_CORE_DATA_PRODUCT_LOCALIZATION
        /// </summary>
        internal sealed class CoreDataProductLocalizationMapping : EntityTypeConfiguration<CoreDataProductLocalization>
        {
    	    public static readonly CoreDataProductLocalizationMapping Instance = new CoreDataProductLocalizationMapping();
    	    /// <summary>
            /// Instance constructor
            /// </summary>
            private CoreDataProductLocalizationMapping()
            {
                // Primary Key
                this.HasKey(t => t.Id);
    
                // Properties
                this.Property(t => t.Id)
                    .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
    
                this.Property(t => t.ProductName)
                    .IsRequired()
                    .IsUnicode()
                    .HasMaxLength(250);
    
                this.Property(t => t.Description)
                    .IsUnicode()
                    .HasMaxLength(250);
    
                this.Property(t => t.CreateDate)
                    .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
    
                // Table & Column Mappings
                this.ToTable("DRL_CORE_DATA_PRODUCT_LOCALIZATION", "DATA");
                this.Property(t => t.Id).HasColumnName(CoreDataProductLocalization.Fields.Id);
                this.Property(t => t.CoreDataProductId).HasColumnName(CoreDataProductLocalization.Fields.CoreDataProductId);
                this.Property(t => t.SysLanguageId).HasColumnName(CoreDataProductLocalization.Fields.SysLanguageId);
                this.Property(t => t.ProductName).HasColumnName(CoreDataProductLocalization.Fields.ProductName);
                this.Property(t => t.Description).HasColumnName(CoreDataProductLocalization.Fields.Description);
                this.Property(t => t.CreateDate).HasColumnName(CoreDataProductLocalization.Fields.CreateDate);
                this.Property(t => t.ChangeDate).HasColumnName(CoreDataProductLocalization.Fields.ChangeDate);
                this.Property(t => t.OwnerOrgId).HasColumnName(CoreDataProductLocalization.Fields.OwnerOrgId);
                this.Property(t => t.VisibilityOrgId).HasColumnName(CoreDataProductLocalization.Fields.VisibilityOrgId);
                this.Property(t => t.CreateEmployeeId).HasColumnName(CoreDataProductLocalization.Fields.CreateEmployeeId);
                this.Property(t => t.ChangeEmployeeId).HasColumnName(CoreDataProductLocalization.Fields.ChangeEmployeeId);
                this.Property(t => t.FromDate).HasColumnName(CoreDataProductLocalization.Fields.FromDate);
                this.Property(t => t.ToDate).HasColumnName(CoreDataProductLocalization.Fields.ToDate);
                this.Property(t => t.DeleteDate).HasColumnName(CoreDataProductLocalization.Fields.DeleteDate);
    
                // Relationships
                this.HasRequired(t => t.SysLanguage)
                    .WithMany(t => t.CoreDataProductLocalizations)
                    .HasForeignKey(d => d.SysLanguageId);
                this.HasRequired(t => t.CoreDataProduct)
                    .WithMany(t => t.CoreDataProductLocalizations)
                    .HasForeignKey(d => d.CoreDataProductId);
    
    
            }
        }
}
