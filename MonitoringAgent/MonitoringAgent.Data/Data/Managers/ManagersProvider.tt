<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\Settings.ttinclude" #>
<#
    // Read schema
    var factory = GetDbProviderFactory();
    var tables = LoadTables(factory);
    
    // Generate output
    if (tables.Count > 0)
    {
        fileManager.StartHeader();
		#>
using Microsoft.Practices.Unity;
using MonitoringAgent.Data.Interfaces.Managers;

namespace MonitoringAgent.Common.Data.Managers
{
	public partial class ManagersProvider
	{
		protected void RegisterManagers(IUnityContainer container)
		{
		<#
        foreach (Table tbl in from t in tables.Where(t => !t.IsMapping).OrderBy(x => x.NameHumanCase) select t)
        {
#>
<#
            var managerName = tbl.NameHumanCase + "Manager";
			var manInterface = "I" + tbl.NameHumanCase + "Manager";
#>
			container.RegisterType<<#=manInterface#>, <#=managerName#>>(new PerResolveLifetimeManager());
<#
        }
    }
#>	
		}
	}
}

