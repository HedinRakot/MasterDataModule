//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;

namespace TuevSued.V1.IT.CoreBase.Entities.MasterDataModule.Common
{
    /// <summary>
    /// Entity from table ORG_ORGANIZATIONAL_UNIT. Imported from AsPro: Represents "Organizational unit" object  
    /// </summary>
    public partial  class OrgOrganizationalUnit: IHasId<int>, ICommonSystemFields, ISystemFields, IRemovable
    {
    
        /// <summary>
        /// Table name
        /// </summary>
        public static readonly string EntityTableName = "ORG_ORGANIZATIONAL_UNIT";
        #region Fields
        /// <summary>
        /// Columns names
        /// </summary>
        public static class Fields
        {
            /// <summary>
            /// Column name 'ID' for property <see cref="OrgOrganizationalUnit.Id"/>
            /// </summary>
            public static readonly string Id = "ID";
            /// <summary>
            /// Column name 'ORG_NUMBER' for property <see cref="OrgOrganizationalUnit.OrgNumber"/>
            /// </summary>
            public static readonly string OrgNumber = "ORG_NUMBER";
            /// <summary>
            /// Column name 'NAME' for property <see cref="OrgOrganizationalUnit.Name"/>
            /// </summary>
            public static readonly string Name = "NAME";
            /// <summary>
            /// Column name 'ABBR' for property <see cref="OrgOrganizationalUnit.Abbr"/>
            /// </summary>
            public static readonly string Abbr = "ABBR";
            /// <summary>
            /// Column name 'ACCOUNTING_AREA' for property <see cref="OrgOrganizationalUnit.AccountingArea"/>
            /// </summary>
            public static readonly string AccountingArea = "ACCOUNTING_AREA";
            /// <summary>
            /// Column name 'LAND_TAG' for property <see cref="OrgOrganizationalUnit.LandTag"/>
            /// </summary>
            public static readonly string LandTag = "LAND_TAG";
            /// <summary>
            /// Column name 'ORG_TOP_ID' for property <see cref="OrgOrganizationalUnit.OrgTopId"/>
            /// </summary>
            public static readonly string OrgTopId = "ORG_TOP_ID";
            /// <summary>
            /// Column name 'LOCATION_ABBR' for property <see cref="OrgOrganizationalUnit.LocationAbbr"/>
            /// </summary>
            public static readonly string LocationAbbr = "LOCATION_ABBR";
            /// <summary>
            /// Column name 'SYS_LOCATION_ID' for property <see cref="OrgOrganizationalUnit.SysLocationId"/>
            /// </summary>
            public static readonly string SysLocationId = "SYS_LOCATION_ID";
            /// <summary>
            /// Column name 'ORG_ACCOUNT_TYPE_ID' for property <see cref="OrgOrganizationalUnit.OrgAccountTypeId"/>
            /// </summary>
            public static readonly string OrgAccountTypeId = "ORG_ACCOUNT_TYPE_ID";
            /// <summary>
            /// Column name 'ORG_TYPE_ID' for property <see cref="OrgOrganizationalUnit.OrgTypeId"/>
            /// </summary>
            public static readonly string OrgTypeId = "ORG_TYPE_ID";
            /// <summary>
            /// Column name 'ORD_INSPECTION_LOCATION_ID' for property <see cref="OrgOrganizationalUnit.OrdInspectionLocationId"/>
            /// </summary>
            public static readonly string OrdInspectionLocationId = "ORD_INSPECTION_LOCATION_ID";
            /// <summary>
            /// Column name 'EMAIL_FROM' for property <see cref="OrgOrganizationalUnit.EmailFrom"/>
            /// </summary>
            public static readonly string EmailFrom = "EMAIL_FROM";
            /// <summary>
            /// Column name 'EMAIL_TO' for property <see cref="OrgOrganizationalUnit.EmailTo"/>
            /// </summary>
            public static readonly string EmailTo = "EMAIL_TO";
            /// <summary>
            /// Column name 'IS_EGDOK_PRINT_ALWAYS' for property <see cref="OrgOrganizationalUnit.IsEgdokPrintAlways"/>
            /// </summary>
            public static readonly string IsEgdokPrintAlways = "IS_EGDOK_PRINT_ALWAYS";
            /// <summary>
            /// Column name 'CREATE_DATE' for property <see cref="OrgOrganizationalUnit.CreateDate"/>
            /// </summary>
            public static readonly string CreateDate = "CREATE_DATE";
            /// <summary>
            /// Column name 'CHANGE_DATE' for property <see cref="OrgOrganizationalUnit.ChangeDate"/>
            /// </summary>
            public static readonly string ChangeDate = "CHANGE_DATE";
            /// <summary>
            /// Column name 'DELETE_DATE' for property <see cref="OrgOrganizationalUnit.DeleteDate"/>
            /// </summary>
            public static readonly string DeleteDate = "DELETE_DATE";
            /// <summary>
            /// Column name 'OWNER_ORG_ID' for property <see cref="OrgOrganizationalUnit.OwnerOrgId"/>
            /// </summary>
            public static readonly string OwnerOrgId = "OWNER_ORG_ID";
            /// <summary>
            /// Column name 'VISIBILITY_ORG_ID' for property <see cref="OrgOrganizationalUnit.VisibilityOrgId"/>
            /// </summary>
            public static readonly string VisibilityOrgId = "VISIBILITY_ORG_ID";
            /// <summary>
            /// Column name 'CREATE_EMPLOYEE_ID' for property <see cref="OrgOrganizationalUnit.CreateEmployeeId"/>
            /// </summary>
            public static readonly string CreateEmployeeId = "CREATE_EMPLOYEE_ID";
            /// <summary>
            /// Column name 'CHANGE_EMPLOYEE_ID' for property <see cref="OrgOrganizationalUnit.ChangeEmployeeId"/>
            /// </summary>
            public static readonly string ChangeEmployeeId = "CHANGE_EMPLOYEE_ID";
            /// <summary>
            /// Column name 'SOURCE' for property <see cref="OrgOrganizationalUnit.Source"/>
            /// </summary>
            public static readonly string Source = "SOURCE";
            /// <summary>
            /// Column name 'FROM_DATE' for property <see cref="OrgOrganizationalUnit.FromDate"/>
            /// </summary>
            public static readonly string FromDate = "FROM_DATE";
            /// <summary>
            /// Column name 'TO_DATE' for property <see cref="OrgOrganizationalUnit.ToDate"/>
            /// </summary>
            public static readonly string ToDate = "TO_DATE";
            /// <summary>
            /// Column name 'ORG_ACCOUNTING_AREA_ID' for property <see cref="OrgOrganizationalUnit.OrgAccountingAreaId"/>
            /// </summary>
            public static readonly string OrgAccountingAreaId = "ORG_ACCOUNTING_AREA_ID";
      
        }
        #endregion
        /// <summary>
        /// Constructor
        /// </summary>
        public OrgOrganizationalUnit()
        {
        }
    
        /// <summary>
        /// PK. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ID  
        /// </summary>
        public int Id {  get;  set; }
        /// <summary>
        /// Organization number. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ORG_NUMBER  
        /// </summary>
        public int OrgNumber {  get;  set; }
        /// <summary>
        /// Name. Original table: ORG_ORGANIZATIONAL_UNIT, Column: NAME  
        /// </summary>
        public string Name {  get;  set; }
        /// <summary>
        /// Abbreviation. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ABBR  
        /// </summary>
        public string Abbr {  get;  set; }
        ///// <summary>
        ///// Accaunting area. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ACCOUNTING_AREA  
        ///// </summary>
        //public string AccountingArea {  get;  set; }
        ///// <summary>
        ///// Country flag. Original table: ORG_ORGANIZATIONAL_UNIT, Column: LAND_TAG  
        ///// </summary>
        //public int? LandTag {  get;  set; }
        ///// <summary>
        ///// Id of superordinated organizational unit. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ORG_TOP_ID  
        ///// </summary>
        //public int? OrgTopId {  get;  set; }
        /// <summary>
        /// Abbreviation of location. Original table: ORG_ORGANIZATIONAL_UNIT, Column: LOCATION_ABBR  
        /// </summary>
        public string LocationAbbr {  get;  set; }
        /// <summary>
        /// Location. Original table: ORG_ORGANIZATIONAL_UNIT, Column: SYS_LOCATION_ID  
        /// </summary>
        public int? SysLocationId {  get;  set; }
        ///// <summary>
        ///// Account type. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ORG_ACCOUNT_TYPE_ID  
        ///// </summary>
        //public int? OrgAccountTypeId {  get;  set; }
        /// <summary>
        /// Type. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ORG_TYPE_ID  
        /// </summary>
        public int OrgTypeId {  get;  set; }
        ///// <summary>
        ///// Reference to inspection location id. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ORD_INSPECTION_LOCATION_ID  
        ///// </summary>
        //public int? OrdInspectionLocationId {  get;  set; }
        /// <summary>
        /// To send info about new user. Original table: ORG_ORGANIZATIONAL_UNIT, Column: EMAIL_FROM  
        /// </summary>
        public string EmailFrom {  get;  set; }
        /// <summary>
        /// To send info about new user. Original table: ORG_ORGANIZATIONAL_UNIT, Column: EMAIL_TO  
        /// </summary>
        public string EmailTo {  get;  set; }
        /// <summary>
        /// Indicates if EgDok type of files should be printed always. If false only positive closed documents are printed.. Original table: ORG_ORGANIZATIONAL_UNIT, Column: IS_EGDOK_PRINT_ALWAYS  
        /// </summary>
        public bool IsEgdokPrintAlways {  get;  set; }
        /// <summary>
        /// Create date. Original table: ORG_ORGANIZATIONAL_UNIT, Column: CREATE_DATE  
        /// </summary>
        public System.DateTime? CreateDate {  get;  set; }
        /// <summary>
        /// Change date. Original table: ORG_ORGANIZATIONAL_UNIT, Column: CHANGE_DATE  
        /// </summary>
        public System.DateTime? ChangeDate {  get;  set; }
        /// <summary>
        /// Delete date. Original table: ORG_ORGANIZATIONAL_UNIT, Column: DELETE_DATE  
        /// </summary>
        public System.DateTime? DeleteDate {  get;  set; }
        /// <summary>
        /// Owner of record concerning organizational hierarchy. Original table: ORG_ORGANIZATIONAL_UNIT, Column: OWNER_ORG_ID  
        /// </summary>
        public int? OwnerOrgId {  get;  set; }
        /// <summary>
        /// Visibility of record concerning organizational hierarchy. Original table: ORG_ORGANIZATIONAL_UNIT, Column: VISIBILITY_ORG_ID  
        /// </summary>
        public int? VisibilityOrgId {  get;  set; }
        /// <summary>
        /// Employee who created record. Original table: ORG_ORGANIZATIONAL_UNIT, Column: CREATE_EMPLOYEE_ID  
        /// </summary>
        public int? CreateEmployeeId {  get;  set; }
        /// <summary>
        /// Employee who changed record. Original table: ORG_ORGANIZATIONAL_UNIT, Column: CHANGE_EMPLOYEE_ID  
        /// </summary>
        public int? ChangeEmployeeId {  get;  set; }
        /// <summary>
        /// Short name of source data. Original table: ORG_ORGANIZATIONAL_UNIT, Column: SOURCE  
        /// </summary>
        public string Source {  get;  set; }
        /// <summary>
        /// Validity start date. Original table: ORG_ORGANIZATIONAL_UNIT, Column: FROM_DATE  
        /// </summary>
        public System.DateTime FromDate {  get;  set; }
        /// <summary>
        /// Validity end date. Original table: ORG_ORGANIZATIONAL_UNIT, Column: TO_DATE  
        /// </summary>
        public System.DateTime ToDate {  get;  set; }
        /// <summary>
        /// TODO: SQL COMMENT. Original table: ORG_ORGANIZATIONAL_UNIT, Column: ORG_ACCOUNTING_AREA_ID  
        /// </summary>
        public int? OrgAccountingAreaId {  get;  set; }
    
        /// <summary>
        /// From date entity valid 
        /// </summary>
    	DateTime? ISystemFields.FromDate
    	{
    	    get { 
    		      return FromDate; 
    			}
    		set { 
    		      if(value.HasValue){FromDate = value.Value;} else{ throw new ArgumentNullException("value"); } 
    			}
    	}    
        /// <summary>
        /// To date entity valid 
        /// </summary>
    	DateTime? ISystemFields.ToDate
    	{
    	    get { 
    		      return ToDate; 
    			}
    		set { 
    		      if(value.HasValue){ToDate = value.Value;} else{ throw new ArgumentNullException("value"); } 
    			}
    	}    
        /// <summary>
        /// Shallow copy of object. Exclude navigation properties and PK properties
        /// </summary>
        public OrgOrganizationalUnit ShallowCopy()
    	{
    	   return new OrgOrganizationalUnit {
                                           OrgNumber = this.OrgNumber,
                                           Name = this.Name,
                                           Abbr = this.Abbr,
                                           //AccountingArea = this.AccountingArea,
                                           //LandTag = this.LandTag,
                                           //OrgTopId = this.OrgTopId,
                                           LocationAbbr = this.LocationAbbr,
                                           SysLocationId = this.SysLocationId,
                                           //OrgAccountTypeId = this.OrgAccountTypeId,
                                           OrgTypeId = this.OrgTypeId,
                                           //OrdInspectionLocationId = this.OrdInspectionLocationId,
                                           EmailFrom = this.EmailFrom,
                                           EmailTo = this.EmailTo,
                                           IsEgdokPrintAlways = this.IsEgdokPrintAlways,
                                           DeleteDate = this.DeleteDate,
                                           Source = this.Source,
                                           OrgAccountingAreaId = this.OrgAccountingAreaId,
    	                              };
    	}
    }
}
